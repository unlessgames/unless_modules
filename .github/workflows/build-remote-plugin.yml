# a modified version of the workflow from qno/vcv-plugin-github-actions-example
# differences include
# - getting the plugin's sources from gitlab.com
# - using only a single tag/name 
# - deleting old releases
# - generating release notes based on CHANGELOG.md and latest commits
# - triggering build through github api since usually no pushing happens here

# - converted for v2 based on the workflow from dhemery/DHE-Modules

name: Build Remote VCV Rack v2 Plugin

on: 
  push: 
    branches:
      - v2
  repository_dispatch:
    types: 
      [trigger_build]

env:
  rack-sdk-version : 2.git.219bbaf1
  tag : dev-builds-v2
  release-name : development builds v2
  repo : https://gitlab.com/unlessgames/unless_modules
  branch : v2

defaults:
  run:
    shell: bash

jobs:    
  build: 
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast : false
      matrix:
        config:
          - os: ubuntu-latest
            arch: lin
            compiler: cc
            install-dependencies: |
              sudo apt-get install -y libglu-dev
#           - os: macos-latest
#             arch: mac
#             compiler: cc
#             install-dependencies: |
#               brew install mesa
#           - os: windows-latest
#             arch: win
#             compiler: gcc
#             install-dependencies: |
#               choco install --no-progress -y zip
    steps:
      - name : Get Sources from Remote
        run : |
          git clone --depth 1 ${{ env.repo }} --single-branch --branch ${{ env.branch }} --recurse-submodules .
          echo "git-rev=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          
      - name: Get Rack-SDK
        run: |
          
          curl -o sdk.zip https://vcvrack.com/downloads/Rack-SDK-${{ env.rack-sdk-version }}-${{ matrix.config.arch }}.zip
          unzip sdk.zip
        # pushd $HOME
        
#       - name: Patch plugin.mk, use 7zip on Windows
#         if: runner.os == 'Windows'
#         run: |
#           sed -i 's/zip -q -9 -r/7z a -tzip -mx=9/' $HOME/Rack-SDK/plugin.mk
          
#      - name: Modify plugin version
        # only modify plugin version if no tag was created
        # if: "! startsWith(github.ref, 'refs/tags/v')"
#        run: |
#          plugin_version=`jq -r '.version' plugin.json`
#          dev_version="${plugin_version}-${{ env.git-rev }}"
#          echo "Set plugin.json version from $plugin_version to $dev_version"
#          cat <<< `jq --arg VERSION "$dev_version" '.version=$VERSION' plugin.json` > plugin.json
      - name: Install Dependencies
        run: |
          ${{ matrix.config.install-dependencies }}

      - name: Build plugin
        env:
          RACK_DIR: Rack-SDK
          CC: ${{ matrix.config.compiler }}
        run: |
          make -j dist
#          make -j dep
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.vcvplugin
          name: ${{ matrix.config.arch }}

  publish:
    name: Publish plugin
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name : Generate Release Notes
        run : |
          git clone --depth 5 ${{ env.repo }} --recurse-submodules --branch ${{ env.branch }} .
          
          git_rev=`git rev-parse --short HEAD`
          git_revision=`git rev-parse HEAD`
          
          changelog=$(sed -n '0,/^## /p' ./CHANGELOG.md | head -n -1)
          commit_link() { echo "[$(echo $1 | cut -c1-8)](${{ env.repo }}/-/commit/$1)"; }
          commit_line() { echo "- $(commit_link $(echo $1 | cut -c1-40)) : $(echo $1 | cut -c41-)" ; }
          
          cat << EOF > notes.md
          # warning! expect the unexpected!
          ## autogenerated from 
          ## [${{ env.repo }}](${{ env.repo }}) : $(commit_link $git_revision)
          $changelog
          ## latest commits
          $(git log --pretty=oneline | head -5 | while read line ; do echo $(commit_line "$line") ; done)
          # downloads
            - note : the version of the zip file is different from the latest changelog version seen above. that is intentional and the zip contains the latest things. [see why this is](https://community.vcvrack.com/t/rack-stutter-audio-noise-loading-a-patch/11542/37)
          EOF
          
          echo 'release-notes<<EOF' >> $GITHUB_ENV
          cat ./notes.md >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
                    
      - name : Delete Older Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 0
          delete_tag_pattern: dev-build-v2
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: ${{ env.release-name }}
          body: ${{ env.release-notes }}
          draft: false
          prerelease: false
      - uses: actions/download-artifact@v2
        with:
          path: _artifacts
      - name: Upload release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _artifacts/**/*.vcvplugin
          tag: ${{ env.tag }}
          file_glob: true
